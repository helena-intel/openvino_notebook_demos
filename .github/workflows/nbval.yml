name: nbval

on:
  workflow_dispatch:
  pull_request:
    branches:
    - 'main'
    paths:
    - 'notebooks/**.ipynb'
    - 'notebooks/**.py'
    - 'requirements.txt'
    - '.github/workflows/nbval.yml'
  push:
    branches:
    - 'main'
    paths:
    - 'notebooks/**.ipynb'
    - 'notebooks/**.py'
    - 'requirements.txt'
    - '.github/workflows/nbval.yml'
  schedule:
    - cron:  '30 8 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, windows-latest]
        python: [3.6, 3.7, 3.8]
        include:
        - os: ubuntu-18.04
          pip_cache_path: ~/.cache/pip
        - os: ubuntu-20.04
          pip_cache_path: ~/.cache/pip
        - os: windows-latest
          pip_cache_path: ~\AppData\Local\pip\Cache
    steps:
    - name: Cache Pip
      uses: actions/cache@v2
      with:
        path: ${{ matrix.pip_cache_path }}
        key: ${{ runner.os }}-${{ matrix.python }}-cache
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m ipykernel install --user --name openvino_env
    - name: Pip freeze
      run: |
        python -m pip freeze
        python -m pip freeze > pip-freeze-${{ github.sha }}-${{matrix.os}}-${{ matrix.python }}.txt
    - name: Archive pip freeze
      uses: actions/upload-artifact@v2
      with:
        name: pip-freeze
        path: pip-freeze-${{ github.sha }}-${{matrix.os}}-${{ matrix.python }}.txt
    - name: Test Jupyterlab
      run: |
        jupyter lab notebooks --help
    - name: Analysing with nbval
      run: |
        python -m pytest --nbval --durations 10 --ignore hand_pose
    - name: Cache openvino pip files
      run: |
        # Uninstall all files except openvino files to limit cache size
        pip freeze | grep -v openvino | grep -v nncf | xargs pip uninstall -y
